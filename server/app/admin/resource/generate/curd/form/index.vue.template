<script setup lang="ts">
import { ref } from "vue";
import ReCol from "@/components/ReCol";
import { formRules } from "../utils/rule";
import { FormProps } from "../utils/types";

const props = withDefaults(defineProps<FormProps>(), {
  formInline: () => ({
    title: "新增",
{{- range .Columns}}
{{- if and (ne .ColumnName "id") (ne .ColumnName "created_at") (ne .ColumnName "updated_at")}}
    {{.JsonField}}: {{if eq .GoType "string"}}""{{else if eq .GoType "int" "uint" "int64" "uint64"}}0{{else}}""{{end}},
{{- end}}
{{- end}}
  })
});

const ruleFormRef = ref();
const newFormInline = ref(props.formInline);

function getRef() {
  return ruleFormRef.value;
}

defineExpose({ getRef });
</script>

<template>
  <el-form
    ref="ruleFormRef"
    :model="newFormInline"
    :rules="formRules"
    label-width="82px"
  >
    <el-row :gutter="30">
{{- range .Columns}}
{{- if and (ne .ColumnName "id") (ne .ColumnName "created_at") (ne .ColumnName "updated_at")}}
      <re-col :value="12" :xs="24" :sm="24">
        <el-form-item label="{{.ColumnComment}}" prop="{{.JsonField}}">
{{- if eq .GoType "string"}}
          <el-input
            v-model="newFormInline.{{.JsonField}}"
            clearable
            placeholder="请输入{{.ColumnComment}}"
          />
{{- else if eq .GoType "int" "uint" "int64" "uint64"}}
          <el-input-number
            v-model="newFormInline.{{.JsonField}}"
            placeholder="请输入{{.ColumnComment}}"
            class="w-full"
          />
{{- else}}
          <el-input
            v-model="newFormInline.{{.JsonField}}"
            clearable
            placeholder="请输入{{.ColumnComment}}"
          />
{{- end}}
        </el-form-item>
      </re-col>
{{- end}}
{{- end}}
    </el-row>
  </el-form>
</template>